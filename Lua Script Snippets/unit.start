lastMouseTime = system.getArkTime()
analog_input = 0
mousedeltax = 0
mousedeltay = 0
right_trigger = 0
left_trigger = 0
left_stick_x = 0
left_stick_y = 0
right_stick_x = 0
right_stick_y = 0
function toBits(num)
    -- returns a table of bits, most significant first.
    bits = math.max(1, select(2, math.frexp(num)))
    local t = {} -- will contain the bits
    for b = bits, 1, -1 do
        t[b] = math.fmod(num, 2)
        num = math.floor((num - t[b]) / 2)
    end
    return t
end

math.frexp = function(x)
	if x == 0 then return 0, 0 end
	local e = math.floor(math.log(math.abs(x)) / math.log(2) + 1)
	return x / 2 ^ e, e
end

--str = string range for input. multiplier = the highest value bit. returns the resulting integer
function toInt(str)
    local multiplier = 2^(str:len()-1)
    local number = 0
    for i = 1,#str do
        number = number +(multiplier*tonumber(str:sub(i,i)))
        multiplier = multiplier/2
    end
    return number
end

function getCleanBitstring(val)
   local bitstring = ""
    for k, v in pairs(toBits(val)) do
        bitstring = bitstring..v
    end
    return bitstring
end

function gamepadGet5Axis(bitstring)
    local trigger_steps = 63
    local stick_steps = 128

    trigger = toInt(string.sub(bitstring, 18, 23))
    --system.print(string.sub(bitstring, 18, 23))
    trigger = trigger/trigger_steps

    left_stick = toInt(string.sub(bitstring, 10, 17))
    --system.print(string.sub(bitstring, 10, 17))
    if left_stick>=stick_steps then
        left_stick=left_stick - stick_steps
    else
        left_stick=-left_stick
    end
    left_stick = left_stick/(stick_steps-1)

    right_stick = toInt(string.sub(bitstring, 2, 9))
    --system.print(string.sub(bitstring, 2, 9))
    if right_stick>=stick_steps then
        right_stick=right_stick - stick_steps
    else
        right_stick=-right_stick
    end
    right_stick = right_stick/(stick_steps-1)
    return trigger, left_stick, right_stick
end

function gamepadGet6Axis(bitstring)
    local trigger_steps = 64
    local stick_steps = 64

    local trigger = toInt(string.sub(bitstring, 16, 22))
    --system.print(string.sub(bitstring, 16, 22))

    if trigger>=trigger_steps then
        trigger=trigger - trigger_steps
    else
        --this should realistically never ever happen for an Xbox gamepad!
        trigger=-trigger
    end
    local trigger = trigger/(trigger_steps-1)


    left_stick = toInt(string.sub(bitstring, 9, 15))
    --system.print(string.sub(bitstring,9, 15))
    if left_stick>=stick_steps then
        left_stick=left_stick - stick_steps
    else
        left_stick=-left_stick
    end
    left_stick = left_stick/(stick_steps-1)

    right_stick = toInt(string.sub(bitstring, 2, 8))
    --system.print(string.sub(bitstring, 2, 8))
    if right_stick>=stick_steps then
        right_stick=right_stick - stick_steps
    else
        right_stick=-right_stick
    end
    right_stick = right_stick/(stick_steps-1)
    return trigger, left_stick, right_stick
end

counter = 0
multiplecounter = 0